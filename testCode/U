using Plots
plotly()
Plots.PlotlyBackend()
#Declare pyplot backend.
#At the time of publication, default "GR" backend is glitchy

#Creating the wavefunction
function Ψ(x,n,L)
    √(2.0/L)* sin(Float16(n*π*x)/L)
end

#Declaring variables for the function
L = 20
n =  3
x = 0:0.1:L
y = Ψ.(x,n,L)

#Plotting the probaility amplitude
p1 = plot(x, 
  y,
  w=3, 
  label="probability amplitude: Ψ(x,$n,$L)", 
  xlabel="x",
  ylabel="Ψ",
  ylim=(-1,1))

#Plotting the probability distribution 
  
p2 = plot(x,
    y.^2,
    w = 3,
    label = "probability distribution: Ψ^2(x,$n,$L)",
    xlabel = "x",
    ylabel = "Ψ^2",
    ylim = (-1,1))
    

#Displaying both
plot(p1, p2, layout=(1,2), legened=:bottomright, legendfontsize=7)


#Using the Gauss Konrod Integration algorithm
using QuadGK
g(x) = (√(2.0/L)*sin(Float64(n*π*x)/L))^2
integral, err = quadgk(x -> g(x), 0, 20, rtol=1e-5)




